version: '3.8'

services:
  postgres:
    image: postgres:15.1
    container_name: niffler-all
    environment:
      - CREATE_DATABASES=niffler-auth,niffler-currency,niffler-spend,niffler-userdata
      - PGUSER=postgres
      - POSTGRES_PASSWORD=secret
      - TZ=GMT+3
      - PGTZ=GMT+3
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/script:/docker-entrypoint-initdb.d
    command: [ "postgres", "-c", "max_prepared_transactions=100" ]
    networks:
      - niffler-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 3s
      timeout: 3s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - 2181:2181
    networks:
      - niffler-network

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    ports:
      - 9092:9092
    depends_on:
      zookeeper:
        condition: service_started
    networks:
      - niffler-network

  niffler-client:
    container_name: niffler-client
    build:
      context: ./niffler-ng-client
      dockerfile: Dockerfile
      args:
        NPM_COMMAND: build:dev
    networks:
      - niffler-network
    depends_on:
      - kafka
      - niffler-all

volumes:
  pgdata:
    external: true

networks:
  niffler-network:
    driver: bridge
    name: niffler-network